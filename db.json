{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/hexo-theme-clean-blog/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"source/img/webstorm-sass-config.png","path":"img/webstorm-sass-config.png","modified":1,"renderable":0},{"_id":"themes/hexo-theme-clean-blog/source/css/article.styl","path":"css/article.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/css/base.styl","path":"css/base.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/css/mixins.styl","path":"css/mixins.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/css/variables.styl","path":"css/variables.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/img/about-bg.jpg","path":"img/about-bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/img/home-bg.jpg","path":"img/home-bg.jpg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-clean-blog/source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":1,"renderable":1},{"_id":"source/img/sea2.png","path":"img/sea2.png","modified":1,"renderable":0},{"_id":"source/img/sea1.png","path":"img/sea1.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"b40dc7e6ec30c7bd81c41d88fc845cddbc3f1920","modified":1487745302000},{"_id":"source/favicon.ico","hash":"fcc54550eb569466ac4eb9750b734a54fdb7fdb3","modified":1487745244000},{"_id":"themes/hexo-theme-clean-blog/_config.yml","hash":"439a0766fd60b6097f4cbd40247b8615e21ab96a","modified":1487860000000},{"_id":"themes/hexo-theme-clean-blog/LICENSE","hash":"8726b416df4f067cff579e859f05c4b594b8be09","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/README.md","hash":"c5c7b0fd01aa229304e7b00697517aaca51de577","modified":1486350393000},{"_id":"source/_posts/crontab的一些使用.md","hash":"059721e6019efa5f58915c752ce32b6f40019244","modified":1487859976000},{"_id":"source/_posts/快速安装node笔记.md","hash":"107ece30de17da7ad725858244dd98d9cc43a20c","modified":1487828699000},{"_id":"source/_posts/让git忽略ssl证书错误.md","hash":"37e9bb23bced2547209f4f20bba2d11f4b6f3a8a","modified":1487828699000},{"_id":"source/_posts/webstorm上使用sass.md","hash":"0fc76a774b6ffaed40e2d526fd5619d61c352505","modified":1487828322000},{"_id":"source/about/index.md","hash":"71cbba17a1c2593ad7dbece6e390dd590d34c88a","modified":1487858291000},{"_id":"source/_posts/配置自己的MAC.md","hash":"a883cbad22c8409358be5950dd23cb9566a766c8","modified":1487828272000},{"_id":"source/categories/index.md","hash":"0acb903ed15febfe0d574bf30a8f49ccec2a4909","modified":1487821948000},{"_id":"source/tags/index.md","hash":"92c78e68048ed920963b3a4c9bf16d710493ca0e","modified":1487831984000},{"_id":"themes/hexo-theme-clean-blog/languages/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/fr.yml","hash":"e9e6f7cb362ebb7997f11027498a2748fe3bac95","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/pt.yml","hash":"1d0c3689eb32fe13f37f8f6f303af7624ebfbaf0","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/languages/zh-CN.yml","hash":"8ff033c17cec2478292950888df4877198bb3593","modified":1487831374000},{"_id":"themes/hexo-theme-clean-blog/languages/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/index.ejs","hash":"87995288ca6f95a04add641727aedd3f6afa55eb","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/archive.ejs","hash":"ad0da72df13ce3566985bb390c2c9a9352cf4f07","modified":1487831385000},{"_id":"themes/hexo-theme-clean-blog/layout/post.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/page.ejs","hash":"38382e9bbeb6b8d2eafbd53fff2984111f524c1a","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/layout.ejs","hash":"da2f9018047924ddaf376aee5996c7ddc06cebc1","modified":1487822494000},{"_id":"themes/hexo-theme-clean-blog/source/favicon.ico","hash":"fcc54550eb569466ac4eb9750b734a54fdb7fdb3","modified":1487685217000},{"_id":"source/img/webstorm-sass-config.png","hash":"dde0574f38c7bc636c1592d1ea9ce99b3be2c7f5","modified":1487769464000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/article-archive.ejs","hash":"3d8d98c6545b8332a6d6ed4f8b00327df03ea945","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/after-footer.ejs","hash":"80970a6cfbf9b1abe0c472636b321a9be08fdc43","modified":1487821213000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/article-categories.ejs","hash":"5a0bf5a20f670621d8013c9b9d7976b45c8aa80f","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/article-full.ejs","hash":"00750a92f221f32522defcdcd9263ac27a36a885","modified":1487822601000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/article-index.ejs","hash":"e433df4e245e2d4c628052c6e59966563542d94d","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/article-tags.ejs","hash":"6136434be09056c1466149cecb3cc2e80d107999","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/baidu-analytics.ejs","hash":"869f7ac7244e8f90a209899ab29f293196f4689a","modified":1487765893000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/comments.ejs","hash":"455756b0099c02e133fc0a8cc36ffdfa4926d58a","modified":1487768930000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/footer.ejs","hash":"d252fb1a41890e6481bb054f9cc4ceec3c0b0ed9","modified":1487672066000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/gallery.ejs","hash":"21e4f28909f4a79ff7d9f10bdfef6a8cb11632bf","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/google-analytics.ejs","hash":"002422e52d7d78e33cdb66836a8d6e0b98fb2dfc","modified":1487767902000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/menu.ejs","hash":"ba299316400499e9ede154e9627cafb7ce411888","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/head.ejs","hash":"6e2dd922bb0c0be3c98a59aa5317362623fce13e","modified":1487821149000},{"_id":"themes/hexo-theme-clean-blog/layout/_partial/share.ejs","hash":"318691703c1ef7a0b3e69aa205c50dc836e1953d","modified":1487830625000},{"_id":"themes/hexo-theme-clean-blog/source/css/article.styl","hash":"f5294d7a3d6127fcb287de3ff0c12aebb1766c7b","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/css/base.styl","hash":"f0a6fcf58fe515e1359acde0ed34081f580ec7a3","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/css/mixins.styl","hash":"892f55e8a71f2e23a52e48e217dad3303bbad913","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/css/style.styl","hash":"c40dc495a41007d21c59f342ee42b2d31d7b5ff4","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/css/variables.styl","hash":"cd82df5ca8dfbcfec12d833f01adfac00878e835","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/img/home-bg.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1486350393000},{"_id":"themes/hexo-theme-clean-blog/source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1486350393000},{"_id":"source/img/sea2.png","hash":"5df568c02ab02d3e5f5f170528ddbd8dcd05a455","modified":1487858891000},{"_id":"source/img/sea1.png","hash":"400065cff151d4961cb695ceb3e5acbfa51a85cb","modified":1487858888000},{"_id":"public/about/index.html","hash":"97a2d184968e3028bb4eb8e0484696f0c17ebddc","modified":1487861455485},{"_id":"public/categories/index.html","hash":"74407edfa453fb5fb264e0265fc2e7d5bf3bed84","modified":1487861455486},{"_id":"public/tags/index.html","hash":"e449d573dd8c4f111c0329bcfda9b89ced24c67e","modified":1487861455486},{"_id":"public/2017/02/21/快速安装node笔记/index.html","hash":"f9d443c16bd7907fd6b7c6bc2ffd3803b038ff3c","modified":1487861455486},{"_id":"public/2017/01/23/让git忽略ssl证书错误/index.html","hash":"04a2b76c1635b6d20e2a2860fbdffde5e61e8a53","modified":1487861455486},{"_id":"public/2017/01/23/crontab的一些使用/index.html","hash":"29b2d4d0842df8fb3c13b3f80cc273c95187dce5","modified":1487861455486},{"_id":"public/2017/01/23/webstorm上使用sass/index.html","hash":"8eb9f2c224e78d4a07b50f90a8ba2ce41ebe3f17","modified":1487861455486},{"_id":"public/archives/index.html","hash":"2a4b852a985ff24e9861522b170df4969c654389","modified":1487861455486},{"_id":"public/archives/2017/index.html","hash":"0b2cdd0b16358cefc91473fd9843f1a74eb192c2","modified":1487861455486},{"_id":"public/archives/2017/01/index.html","hash":"9571e4490f6931b2d207606800fe11d7f2a676c2","modified":1487861455486},{"_id":"public/archives/2017/02/index.html","hash":"7800ae4a32a855767097404ceb4bf275a2a4e8e1","modified":1487861455487},{"_id":"public/index.html","hash":"4cf094744a9d6fc6b34a2c86f9db3acba8ff104b","modified":1487861455487},{"_id":"public/tags/crontab/index.html","hash":"fdcc575a00fb25d954694ee3fc4d97cdae6a3a39","modified":1487861455487},{"_id":"public/tags/Linux/index.html","hash":"cbb57b965bcbef4ae42f88b1a9e969b658b85506","modified":1487861455487},{"_id":"public/tags/node/index.html","hash":"e7e691df786127e901338f59fc311776ba87abf0","modified":1487861455487},{"_id":"public/tags/nvm/index.html","hash":"8db5c4c4a9182d1b66e14cc345c1e1e11707eb7c","modified":1487861455487},{"_id":"public/tags/git/index.html","hash":"8971addff6384c81537720c0afd2bc82b6759a35","modified":1487861455487},{"_id":"public/tags/版本控制/index.html","hash":"f3603765791520f38fbd27d290feb04190038afd","modified":1487861455488},{"_id":"public/tags/sass/index.html","hash":"c7db508249d49b6960aacee2b3ec80d8a78cbfd4","modified":1487861455488},{"_id":"public/tags/前端/index.html","hash":"4338e11ebb9eea4a0d3260ab6232d426b82ef412","modified":1487861455488},{"_id":"public/tags/Mac/index.html","hash":"807e96836004ca761fba950d1a53584637595a3f","modified":1487861455488},{"_id":"public/tags/代理/index.html","hash":"db114b508d5c1fa4fe0844e154a0bd0ea993b8b7","modified":1487861455488},{"_id":"public/tags/终端/index.html","hash":"f920dceee46523a4ba1ed7646cd525374c231635","modified":1487861455488},{"_id":"public/2017/02/22/配置自己的MAC/index.html","hash":"c62621a2f62947095b97e508d7d6abba0df3354a","modified":1487861455488},{"_id":"public/CNAME","hash":"b40dc7e6ec30c7bd81c41d88fc845cddbc3f1920","modified":1487861455497},{"_id":"public/favicon.ico","hash":"fcc54550eb569466ac4eb9750b734a54fdb7fdb3","modified":1487861455497},{"_id":"public/img/about-bg.jpg","hash":"d39126a6456f2bac0169d1779304725f179c9900","modified":1487861455497},{"_id":"public/css/article.css","hash":"f0ee490e1207191946fffc9444f891e9b7ae7289","modified":1487861455935},{"_id":"public/css/base.css","hash":"5bdbdf83ad61e80c537bd75b5442c8b0aac1e0f6","modified":1487861455935},{"_id":"public/css/mixins.css","hash":"45146e7f4346351cd7f364de344aecf9574475f9","modified":1487861455935},{"_id":"public/css/style.css","hash":"4549fbe615459f12cc2e4f560036f911cd51b121","modified":1487861455935},{"_id":"public/css/variables.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487861455935},{"_id":"public/img/webstorm-sass-config.png","hash":"dde0574f38c7bc636c1592d1ea9ce99b3be2c7f5","modified":1487861455935},{"_id":"public/img/home-bg.jpg","hash":"990f6f9dd0ecb5348bfcc47305553d58c0d8f326","modified":1487861455935},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1487861455940},{"_id":"public/img/sea2.png","hash":"5df568c02ab02d3e5f5f170528ddbd8dcd05a455","modified":1487861455949},{"_id":"public/img/sea1.png","hash":"400065cff151d4961cb695ceb3e5acbfa51a85cb","modified":1487861455950}],"Category":[],"Data":[],"Page":[{"title":"about me","date":"2017-02-23T05:14:14.000Z","cover":"/img/about-bg.jpg","comments":0,"_content":"\nHuster\n计院出身，卖马赎身\n果粉，喜欢夜跑深圳湾\nbase深圳，目前供职于一家金融服务公司\n\n\n#### 喜欢的格言\n走自己的路，让别人打的去吧\n\n\n#### 联系方式\ndongqiaoershao@foxmail.com\n\n\n","source":"about/index.md","raw":"---\ntitle: about me\ndate: 2017-02-23 13:14:14\ncover: /img/about-bg.jpg\ncomments: false\n---\n\nHuster\n计院出身，卖马赎身\n果粉，喜欢夜跑深圳湾\nbase深圳，目前供职于一家金融服务公司\n\n\n#### 喜欢的格言\n走自己的路，让别人打的去吧\n\n\n#### 联系方式\ndongqiaoershao@foxmail.com\n\n\n","updated":"2017-02-23T13:58:11.000Z","path":"about/index.html","layout":"page","_id":"ciziialso0001m9xsdjuooycl","content":"<p>Huster<br>计院出身，卖马赎身<br>果粉，喜欢夜跑深圳湾<br>base深圳，目前供职于一家金融服务公司</p>\n<h4 id=\"喜欢的格言\"><a href=\"#喜欢的格言\" class=\"headerlink\" title=\"喜欢的格言\"></a>喜欢的格言</h4><p>走自己的路，让别人打的去吧</p>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4><p>dongqiaoershao@foxmail.com</p>\n","excerpt":"","more":"<p>Huster<br>计院出身，卖马赎身<br>果粉，喜欢夜跑深圳湾<br>base深圳，目前供职于一家金融服务公司</p>\n<h4 id=\"喜欢的格言\"><a href=\"#喜欢的格言\" class=\"headerlink\" title=\"喜欢的格言\"></a>喜欢的格言</h4><p>走自己的路，让别人打的去吧</p>\n<h4 id=\"联系方式\"><a href=\"#联系方式\" class=\"headerlink\" title=\"联系方式\"></a>联系方式</h4><p>dongqiaoershao@foxmail.com</p>\n"},{"title":"categories","date":"2017-02-23T03:51:50.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-02-23 11:51:50\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-02-23T03:52:28.000Z","path":"categories/index.html","layout":"page","_id":"ciziialss0003m9xsfjv7fqkn","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-02-23T03:51:24.000Z","type":"tags","comments":0,"_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-02-23 11:51:24\ntype: \"tags\"\ncomments: false\n---\n\n\n","updated":"2017-02-23T06:39:44.000Z","path":"tags/index.html","layout":"page","_id":"ciziialt20006m9xshqhgvvbd","content":"","excerpt":"","more":""}],"Post":[{"title":"crontab的一些使用","date":"2017-01-23T08:18:50.000Z","_content":"## 一、安装\n```\nyum -y install vixie-cron\nyum -y install crontabs\n```\n\nvixie-cron 软件包是 cron 的主程序；\ncrontabs 软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。\n\n<!--more-->\n\n## 二、配置\n\n需要手动启动crontab，设置开机自动启动\n```\nservice crond start    //启动服务\nservice crond stop    //关闭服务\nservice crond restart    //重启服务\nservice crond reload    //重新载入配置\nservice crond status    //查看crontab服务状态\nchkconfig --level 345 crond on    //centos开机自动启动\n```\n\n## 三、crontab基本操作\n\n```\ncrontab -u    //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数\ncrontab -l    //列出某个用户cron服务的详细内容\ncrontab -r    //删除没个用户的cron服务\ncrontab -e    //编辑某个用户的cron服务\n```\n\n## 四、时程表格式\n```\n时程表格式:\nf1  f2  f3  f4  f5program\n分　 时  日  月　 周　 命令\nf1表示分钟,1～59每分钟用*或者 */1表示\nf2表示小时,1～23（0表示0点）\nf3表示日期即一个月份中的第几日,1～31\nf4表示月份,1～12\nf5标识星期,0～6（0表示星期天）\nf6要执行的程序\n```\n\n## 五、问题排除\n\n如果crontab安装正常、进程正常，脚本没跑起来，排查原因：\n\n#### 1）看log：/var/log/cron\n\n如果找不到/var/log/cron文件，则重启rsyslog：service rsyslog start\n\n#### 2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题\n\n解决办法：把/etc/pam.d/crond文件中的“session    optional   pam_loginuid.so”注释掉，点击参考这里，然后重启crontab即可","source":"_posts/crontab的一些使用.md","raw":"---\ntitle: crontab的一些使用\ndate: 2017-01-23 16:18:50\ntags: [crontab,Linux]\n---\n## 一、安装\n```\nyum -y install vixie-cron\nyum -y install crontabs\n```\n\nvixie-cron 软件包是 cron 的主程序；\ncrontabs 软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。\n\n<!--more-->\n\n## 二、配置\n\n需要手动启动crontab，设置开机自动启动\n```\nservice crond start    //启动服务\nservice crond stop    //关闭服务\nservice crond restart    //重启服务\nservice crond reload    //重新载入配置\nservice crond status    //查看crontab服务状态\nchkconfig --level 345 crond on    //centos开机自动启动\n```\n\n## 三、crontab基本操作\n\n```\ncrontab -u    //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数\ncrontab -l    //列出某个用户cron服务的详细内容\ncrontab -r    //删除没个用户的cron服务\ncrontab -e    //编辑某个用户的cron服务\n```\n\n## 四、时程表格式\n```\n时程表格式:\nf1  f2  f3  f4  f5program\n分　 时  日  月　 周　 命令\nf1表示分钟,1～59每分钟用*或者 */1表示\nf2表示小时,1～23（0表示0点）\nf3表示日期即一个月份中的第几日,1～31\nf4表示月份,1～12\nf5标识星期,0～6（0表示星期天）\nf6要执行的程序\n```\n\n## 五、问题排除\n\n如果crontab安装正常、进程正常，脚本没跑起来，排查原因：\n\n#### 1）看log：/var/log/cron\n\n如果找不到/var/log/cron文件，则重启rsyslog：service rsyslog start\n\n#### 2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题\n\n解决办法：把/etc/pam.d/crond文件中的“session    optional   pam_loginuid.so”注释掉，点击参考这里，然后重启crontab即可","slug":"crontab的一些使用","published":1,"updated":"2017-02-23T14:26:16.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciziialsk0000m9xs6zis6rfr","content":"<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install vixie-cron</div><div class=\"line\">yum -y install crontabs</div></pre></td></tr></table></figure>\n<p>vixie-cron 软件包是 cron 的主程序；<br>crontabs 软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。</p>\n<a id=\"more\"></a>\n<h2 id=\"二、配置\"><a href=\"#二、配置\" class=\"headerlink\" title=\"二、配置\"></a>二、配置</h2><p>需要手动启动crontab，设置开机自动启动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">service crond start    //启动服务</div><div class=\"line\">service crond stop    //关闭服务</div><div class=\"line\">service crond restart    //重启服务</div><div class=\"line\">service crond reload    //重新载入配置</div><div class=\"line\">service crond status    //查看crontab服务状态</div><div class=\"line\">chkconfig --level 345 crond on    //centos开机自动启动</div></pre></td></tr></table></figure></p>\n<h2 id=\"三、crontab基本操作\"><a href=\"#三、crontab基本操作\" class=\"headerlink\" title=\"三、crontab基本操作\"></a>三、crontab基本操作</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab -u    //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数</div><div class=\"line\">crontab -l    //列出某个用户cron服务的详细内容</div><div class=\"line\">crontab -r    //删除没个用户的cron服务</div><div class=\"line\">crontab -e    //编辑某个用户的cron服务</div></pre></td></tr></table></figure>\n<h2 id=\"四、时程表格式\"><a href=\"#四、时程表格式\" class=\"headerlink\" title=\"四、时程表格式\"></a>四、时程表格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">时程表格式:</div><div class=\"line\">f1  f2  f3  f4  f5program</div><div class=\"line\">分　 时  日  月　 周　 命令</div><div class=\"line\">f1表示分钟,1～59每分钟用*或者 */1表示</div><div class=\"line\">f2表示小时,1～23（0表示0点）</div><div class=\"line\">f3表示日期即一个月份中的第几日,1～31</div><div class=\"line\">f4表示月份,1～12</div><div class=\"line\">f5标识星期,0～6（0表示星期天）</div><div class=\"line\">f6要执行的程序</div></pre></td></tr></table></figure>\n<h2 id=\"五、问题排除\"><a href=\"#五、问题排除\" class=\"headerlink\" title=\"五、问题排除\"></a>五、问题排除</h2><p>如果crontab安装正常、进程正常，脚本没跑起来，排查原因：</p>\n<h4 id=\"1）看log：-var-log-cron\"><a href=\"#1）看log：-var-log-cron\" class=\"headerlink\" title=\"1）看log：/var/log/cron\"></a>1）看log：/var/log/cron</h4><p>如果找不到/var/log/cron文件，则重启rsyslog：service rsyslog start</p>\n<h4 id=\"2）如果看到-var-log-cron文件报错：FAILED-to-open-PAM-security-session-Cannot-make-remove-an-entry-for-the-specified-session-，则说明是权限问题\"><a href=\"#2）如果看到-var-log-cron文件报错：FAILED-to-open-PAM-security-session-Cannot-make-remove-an-entry-for-the-specified-session-，则说明是权限问题\" class=\"headerlink\" title=\"2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题\"></a>2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题</h4><p>解决办法：把/etc/pam.d/crond文件中的“session    optional   pam_loginuid.so”注释掉，点击参考这里，然后重启crontab即可</p>\n","excerpt":"<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum -y install vixie-cron</div><div class=\"line\">yum -y install crontabs</div></pre></td></tr></table></figure>\n<p>vixie-cron 软件包是 cron 的主程序；<br>crontabs 软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。</p>","more":"<h2 id=\"二、配置\"><a href=\"#二、配置\" class=\"headerlink\" title=\"二、配置\"></a>二、配置</h2><p>需要手动启动crontab，设置开机自动启动<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">service crond start    //启动服务</div><div class=\"line\">service crond stop    //关闭服务</div><div class=\"line\">service crond restart    //重启服务</div><div class=\"line\">service crond reload    //重新载入配置</div><div class=\"line\">service crond status    //查看crontab服务状态</div><div class=\"line\">chkconfig --level 345 crond on    //centos开机自动启动</div></pre></td></tr></table></figure></p>\n<h2 id=\"三、crontab基本操作\"><a href=\"#三、crontab基本操作\" class=\"headerlink\" title=\"三、crontab基本操作\"></a>三、crontab基本操作</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">crontab -u    //设定某个用户的cron服务，一般root用户在执行这个命令的时候需要此参数</div><div class=\"line\">crontab -l    //列出某个用户cron服务的详细内容</div><div class=\"line\">crontab -r    //删除没个用户的cron服务</div><div class=\"line\">crontab -e    //编辑某个用户的cron服务</div></pre></td></tr></table></figure>\n<h2 id=\"四、时程表格式\"><a href=\"#四、时程表格式\" class=\"headerlink\" title=\"四、时程表格式\"></a>四、时程表格式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">时程表格式:</div><div class=\"line\">f1  f2  f3  f4  f5program</div><div class=\"line\">分　 时  日  月　 周　 命令</div><div class=\"line\">f1表示分钟,1～59每分钟用*或者 */1表示</div><div class=\"line\">f2表示小时,1～23（0表示0点）</div><div class=\"line\">f3表示日期即一个月份中的第几日,1～31</div><div class=\"line\">f4表示月份,1～12</div><div class=\"line\">f5标识星期,0～6（0表示星期天）</div><div class=\"line\">f6要执行的程序</div></pre></td></tr></table></figure>\n<h2 id=\"五、问题排除\"><a href=\"#五、问题排除\" class=\"headerlink\" title=\"五、问题排除\"></a>五、问题排除</h2><p>如果crontab安装正常、进程正常，脚本没跑起来，排查原因：</p>\n<h4 id=\"1）看log：-var-log-cron\"><a href=\"#1）看log：-var-log-cron\" class=\"headerlink\" title=\"1）看log：/var/log/cron\"></a>1）看log：/var/log/cron</h4><p>如果找不到/var/log/cron文件，则重启rsyslog：service rsyslog start</p>\n<h4 id=\"2）如果看到-var-log-cron文件报错：FAILED-to-open-PAM-security-session-Cannot-make-remove-an-entry-for-the-specified-session-，则说明是权限问题\"><a href=\"#2）如果看到-var-log-cron文件报错：FAILED-to-open-PAM-security-session-Cannot-make-remove-an-entry-for-the-specified-session-，则说明是权限问题\" class=\"headerlink\" title=\"2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题\"></a>2）如果看到/var/log/cron文件报错：FAILED to open PAM security session (Cannot make/remove an entry for the specified session)，则说明是权限问题</h4><p>解决办法：把/etc/pam.d/crond文件中的“session    optional   pam_loginuid.so”注释掉，点击参考这里，然后重启crontab即可</p>"},{"title":"nvm快速安装node","date":"2017-02-21T03:01:04.000Z","_content":"\n### 安装nvm：\n```\ngit clone https://github.com/creationix/nvm.git .nvm\n```\n\n### 配置环境变量：\n```\nsource ~/.nvm/nvm.sh\n```\n\n### 永久配置淘宝源：\n```\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\nsource ~/git/nvm/nvm.sh\n```\n\n<!--more-->\n\n### 安装node：\n```\nnvm install v6.9.5\n```\n\n### 默认使用node指定版本\n```\nnvm use v6.9.5\nnvm alias default v6.9.5\n```\n\n### 验证\n```\nnvm ls\n```\n\n\n","source":"_posts/快速安装node笔记.md","raw":"---\ntitle: nvm快速安装node\ndate: 2017-02-21 11:01:04\ntags: [node,nvm]\n---\n\n### 安装nvm：\n```\ngit clone https://github.com/creationix/nvm.git .nvm\n```\n\n### 配置环境变量：\n```\nsource ~/.nvm/nvm.sh\n```\n\n### 永久配置淘宝源：\n```\nexport NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node\nsource ~/git/nvm/nvm.sh\n```\n\n<!--more-->\n\n### 安装node：\n```\nnvm install v6.9.5\n```\n\n### 默认使用node指定版本\n```\nnvm use v6.9.5\nnvm alias default v6.9.5\n```\n\n### 验证\n```\nnvm ls\n```\n\n\n","slug":"快速安装node笔记","published":1,"updated":"2017-02-23T05:44:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciziialsr0002m9xs70cloqda","content":"<h3 id=\"安装nvm：\"><a href=\"#安装nvm：\" class=\"headerlink\" title=\"安装nvm：\"></a>安装nvm：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/creationix/nvm.git .nvm</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量：\"><a href=\"#配置环境变量：\" class=\"headerlink\" title=\"配置环境变量：\"></a>配置环境变量：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.nvm/nvm.sh</div></pre></td></tr></table></figure>\n<h3 id=\"永久配置淘宝源：\"><a href=\"#永久配置淘宝源：\" class=\"headerlink\" title=\"永久配置淘宝源：\"></a>永久配置淘宝源：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</div><div class=\"line\">source ~/git/nvm/nvm.sh</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"安装node：\"><a href=\"#安装node：\" class=\"headerlink\" title=\"安装node：\"></a>安装node：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install v6.9.5</div></pre></td></tr></table></figure>\n<h3 id=\"默认使用node指定版本\"><a href=\"#默认使用node指定版本\" class=\"headerlink\" title=\"默认使用node指定版本\"></a>默认使用node指定版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm use v6.9.5</div><div class=\"line\">nvm alias default v6.9.5</div></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls</div></pre></td></tr></table></figure>\n","excerpt":"<h3 id=\"安装nvm：\"><a href=\"#安装nvm：\" class=\"headerlink\" title=\"安装nvm：\"></a>安装nvm：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone https://github.com/creationix/nvm.git .nvm</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量：\"><a href=\"#配置环境变量：\" class=\"headerlink\" title=\"配置环境变量：\"></a>配置环境变量：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">source ~/.nvm/nvm.sh</div></pre></td></tr></table></figure>\n<h3 id=\"永久配置淘宝源：\"><a href=\"#永久配置淘宝源：\" class=\"headerlink\" title=\"永久配置淘宝源：\"></a>永久配置淘宝源：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</div><div class=\"line\">source ~/git/nvm/nvm.sh</div></pre></td></tr></table></figure>","more":"<h3 id=\"安装node：\"><a href=\"#安装node：\" class=\"headerlink\" title=\"安装node：\"></a>安装node：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm install v6.9.5</div></pre></td></tr></table></figure>\n<h3 id=\"默认使用node指定版本\"><a href=\"#默认使用node指定版本\" class=\"headerlink\" title=\"默认使用node指定版本\"></a>默认使用node指定版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm use v6.9.5</div><div class=\"line\">nvm alias default v6.9.5</div></pre></td></tr></table></figure>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nvm ls</div></pre></td></tr></table></figure>"},{"title":"让git忽略ssl证书错误","date":"2017-01-23T08:21:21.000Z","_content":"\n当你通过HTTPS访问Git远程仓库，如果服务器的SSL证书未经过第三方机构签署，那么Git就会报错。这是十分合理的设计，毕竟未知的没有签署过的证书意味着很大安全风险。但是，如果你正好在架设Git服务器，而正式的SSL证书没有签发下来，你为了赶时间生成了自签署的临时证书，怎样才是最便捷的测试手段。\n\n<!--more-->\n\n一种比较好的做法：\n\n### 第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为\"ture\"，并同时调用正常的git clone命令。完整的命令如下：\n```\nenv GIT_SSL_NO_VERIFY=true git clone https://<host_name/git/project.git\n```\n\n### 第二步，在克隆完毕的仓库中将http.sslVerify设置为\"false\"。完整的命令如下：\n```\ngit config http.sslVerify\"false\"\n```\n\n以上方法应该是Git处理可信任的SSL临时证书很好的方法，第一步使用env命令保证了忽略证书错误是单次行为，不会成为默认的设置。第二次，则把忽略证书错误的设置限定在特定的仓库，避免扩大该设置的适用范围而引起的潜在安全风险。\n\n或者直接就使用命令：\n```\ngit config --global http.sslVerifyfalse\n```\n\n","source":"_posts/让git忽略ssl证书错误.md","raw":"---\ntitle: 让git忽略ssl证书错误\ndate: 2017-01-23 16:21:21\ntags: [git,版本控制]\n---\n\n当你通过HTTPS访问Git远程仓库，如果服务器的SSL证书未经过第三方机构签署，那么Git就会报错。这是十分合理的设计，毕竟未知的没有签署过的证书意味着很大安全风险。但是，如果你正好在架设Git服务器，而正式的SSL证书没有签发下来，你为了赶时间生成了自签署的临时证书，怎样才是最便捷的测试手段。\n\n<!--more-->\n\n一种比较好的做法：\n\n### 第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为\"ture\"，并同时调用正常的git clone命令。完整的命令如下：\n```\nenv GIT_SSL_NO_VERIFY=true git clone https://<host_name/git/project.git\n```\n\n### 第二步，在克隆完毕的仓库中将http.sslVerify设置为\"false\"。完整的命令如下：\n```\ngit config http.sslVerify\"false\"\n```\n\n以上方法应该是Git处理可信任的SSL临时证书很好的方法，第一步使用env命令保证了忽略证书错误是单次行为，不会成为默认的设置。第二次，则把忽略证书错误的设置限定在特定的仓库，避免扩大该设置的适用范围而引起的潜在安全风险。\n\n或者直接就使用命令：\n```\ngit config --global http.sslVerifyfalse\n```\n\n","slug":"让git忽略ssl证书错误","published":1,"updated":"2017-02-23T05:44:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciziialt00005m9xs7k45qhv0","content":"<p>当你通过HTTPS访问Git远程仓库，如果服务器的SSL证书未经过第三方机构签署，那么Git就会报错。这是十分合理的设计，毕竟未知的没有签署过的证书意味着很大安全风险。但是，如果你正好在架设Git服务器，而正式的SSL证书没有签发下来，你为了赶时间生成了自签署的临时证书，怎样才是最便捷的测试手段。</p>\n<a id=\"more\"></a>\n<p>一种比较好的做法：</p>\n<h3 id=\"第一步，克隆远程仓库时，用env命令设置GIT-SSL-NO-VERIFY环境变量为”ture”，并同时调用正常的git-clone命令。完整的命令如下：\"><a href=\"#第一步，克隆远程仓库时，用env命令设置GIT-SSL-NO-VERIFY环境变量为”ture”，并同时调用正常的git-clone命令。完整的命令如下：\" class=\"headerlink\" title=\"第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为”ture”，并同时调用正常的git clone命令。完整的命令如下：\"></a>第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为”ture”，并同时调用正常的git clone命令。完整的命令如下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">env GIT_SSL_NO_VERIFY=true git clone https://&lt;host_name/git/project.git</div></pre></td></tr></table></figure>\n<h3 id=\"第二步，在克隆完毕的仓库中将http-sslVerify设置为”false”。完整的命令如下：\"><a href=\"#第二步，在克隆完毕的仓库中将http-sslVerify设置为”false”。完整的命令如下：\" class=\"headerlink\" title=\"第二步，在克隆完毕的仓库中将http.sslVerify设置为”false”。完整的命令如下：\"></a>第二步，在克隆完毕的仓库中将http.sslVerify设置为”false”。完整的命令如下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config http.sslVerify&quot;false&quot;</div></pre></td></tr></table></figure>\n<p>以上方法应该是Git处理可信任的SSL临时证书很好的方法，第一步使用env命令保证了忽略证书错误是单次行为，不会成为默认的设置。第二次，则把忽略证书错误的设置限定在特定的仓库，避免扩大该设置的适用范围而引起的潜在安全风险。</p>\n<p>或者直接就使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global http.sslVerifyfalse</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>当你通过HTTPS访问Git远程仓库，如果服务器的SSL证书未经过第三方机构签署，那么Git就会报错。这是十分合理的设计，毕竟未知的没有签署过的证书意味着很大安全风险。但是，如果你正好在架设Git服务器，而正式的SSL证书没有签发下来，你为了赶时间生成了自签署的临时证书，怎样才是最便捷的测试手段。</p>","more":"<p>一种比较好的做法：</p>\n<h3 id=\"第一步，克隆远程仓库时，用env命令设置GIT-SSL-NO-VERIFY环境变量为”ture”，并同时调用正常的git-clone命令。完整的命令如下：\"><a href=\"#第一步，克隆远程仓库时，用env命令设置GIT-SSL-NO-VERIFY环境变量为”ture”，并同时调用正常的git-clone命令。完整的命令如下：\" class=\"headerlink\" title=\"第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为”ture”，并同时调用正常的git clone命令。完整的命令如下：\"></a>第一步，克隆远程仓库时，用env命令设置GIT_SSL_NO_VERIFY环境变量为”ture”，并同时调用正常的git clone命令。完整的命令如下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">env GIT_SSL_NO_VERIFY=true git clone https://&lt;host_name/git/project.git</div></pre></td></tr></table></figure>\n<h3 id=\"第二步，在克隆完毕的仓库中将http-sslVerify设置为”false”。完整的命令如下：\"><a href=\"#第二步，在克隆完毕的仓库中将http-sslVerify设置为”false”。完整的命令如下：\" class=\"headerlink\" title=\"第二步，在克隆完毕的仓库中将http.sslVerify设置为”false”。完整的命令如下：\"></a>第二步，在克隆完毕的仓库中将http.sslVerify设置为”false”。完整的命令如下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config http.sslVerify&quot;false&quot;</div></pre></td></tr></table></figure>\n<p>以上方法应该是Git处理可信任的SSL临时证书很好的方法，第一步使用env命令保证了忽略证书错误是单次行为，不会成为默认的设置。第二次，则把忽略证书错误的设置限定在特定的仓库，避免扩大该设置的适用范围而引起的潜在安全风险。</p>\n<p>或者直接就使用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global http.sslVerifyfalse</div></pre></td></tr></table></figure></p>"},{"title":"webstorm上使用sass","date":"2017-01-23T08:00:29.000Z","_content":"\n\n本文主要介绍一下如何在webstorm上使用sass，实时自动编译sass文件。\n\n## 一、安装\n\n### 1、在翻*墙的情况下：\n\n1）首先要为自己电脑安装ruby\n\n2）执行命令行：\n\n$ gem install sass\n\n<!--more-->\n\n### 2、未翻*墙的情况下：\n```\n$ gem sources --remove https://rubygems.org/\n$ gem sources -a https://ruby.taobao.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\nhttps://ruby.taobao.org\n请确保只有ruby.taobao.org\n$ gem install sass\n```\n\n## 二、webstorm参数配置\n\n1）打开webstorm->settings -> tools -> file watchers\n\n2）参数配置\n\n```\nProgram：/usr/local/bin/sass\nArguments：--no-cache --update --style expanded --watch $FileName$:$FileParentDir$\\$FileNameWithoutExtension$.css\nWorking directory：$FileDir$\nOutput paths to refresh：$FileNameWithoutExtension$.css\n```\n\n![webstorm参数配置](/img/webstorm-sass-config.png)\n\n\n\n\n\n## 另外笔者推荐另一种方法：\n\n### 使用compass\n\n1）安装：$ gem install compass\n\n2）编写config.rb文件\n\n```\nrequire 'compass/import-once/activate'\n\\# Require any additional compass plugins here.\n\\# Set this to the root of your project when deployed:\nhttp_path = \"/\"\ncss_dir = \"/pc/style/css\"\nsass_dir = \"/pc/style/sass\"\nimages_dir = \"/pc/style/img\"\njavascripts_dir = \"/pc/js\"\n\\# You can select your preferred output style here (can be overridden via the command line):\n\\# output_style = :expanded or :nested or :compact or :compressed\n\\# To enable relative paths to assets via compass helper functions. Uncomment:\nrelative_assets = true\n\\# To disable debugging comments that display the original location of your selectors. Uncomment:\n\\# line_comments = false\npreferred_syntax = :sass\n```\n\n3）在webstorm的Terminal中输入$ compass watch即可\n\n\n","source":"_posts/webstorm上使用sass.md","raw":"---\ntitle: webstorm上使用sass\ndate: 2017-01-23 16:00:29\ntags: [sass,前端]\n---\n\n\n本文主要介绍一下如何在webstorm上使用sass，实时自动编译sass文件。\n\n## 一、安装\n\n### 1、在翻*墙的情况下：\n\n1）首先要为自己电脑安装ruby\n\n2）执行命令行：\n\n$ gem install sass\n\n<!--more-->\n\n### 2、未翻*墙的情况下：\n```\n$ gem sources --remove https://rubygems.org/\n$ gem sources -a https://ruby.taobao.org/\n$ gem sources -l\n*** CURRENT SOURCES ***\nhttps://ruby.taobao.org\n请确保只有ruby.taobao.org\n$ gem install sass\n```\n\n## 二、webstorm参数配置\n\n1）打开webstorm->settings -> tools -> file watchers\n\n2）参数配置\n\n```\nProgram：/usr/local/bin/sass\nArguments：--no-cache --update --style expanded --watch $FileName$:$FileParentDir$\\$FileNameWithoutExtension$.css\nWorking directory：$FileDir$\nOutput paths to refresh：$FileNameWithoutExtension$.css\n```\n\n![webstorm参数配置](/img/webstorm-sass-config.png)\n\n\n\n\n\n## 另外笔者推荐另一种方法：\n\n### 使用compass\n\n1）安装：$ gem install compass\n\n2）编写config.rb文件\n\n```\nrequire 'compass/import-once/activate'\n\\# Require any additional compass plugins here.\n\\# Set this to the root of your project when deployed:\nhttp_path = \"/\"\ncss_dir = \"/pc/style/css\"\nsass_dir = \"/pc/style/sass\"\nimages_dir = \"/pc/style/img\"\njavascripts_dir = \"/pc/js\"\n\\# You can select your preferred output style here (can be overridden via the command line):\n\\# output_style = :expanded or :nested or :compact or :compressed\n\\# To enable relative paths to assets via compass helper functions. Uncomment:\nrelative_assets = true\n\\# To disable debugging comments that display the original location of your selectors. Uncomment:\n\\# line_comments = false\npreferred_syntax = :sass\n```\n\n3）在webstorm的Terminal中输入$ compass watch即可\n\n\n","slug":"webstorm上使用sass","published":1,"updated":"2017-02-23T05:38:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciziialt20007m9xs9l125ejw","content":"<p>本文主要介绍一下如何在webstorm上使用sass，实时自动编译sass文件。</p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><h3 id=\"1、在翻-墙的情况下：\"><a href=\"#1、在翻-墙的情况下：\" class=\"headerlink\" title=\"1、在翻*墙的情况下：\"></a>1、在翻*墙的情况下：</h3><p>1）首先要为自己电脑安装ruby</p>\n<p>2）执行命令行：</p>\n<p>$ gem install sass</p>\n<a id=\"more\"></a>\n<h3 id=\"2、未翻-墙的情况下：\"><a href=\"#2、未翻-墙的情况下：\" class=\"headerlink\" title=\"2、未翻*墙的情况下：\"></a>2、未翻*墙的情况下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem sources --remove https://rubygems.org/</div><div class=\"line\">$ gem sources -a https://ruby.taobao.org/</div><div class=\"line\">$ gem sources -l</div><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\">https://ruby.taobao.org</div><div class=\"line\">请确保只有ruby.taobao.org</div><div class=\"line\">$ gem install sass</div></pre></td></tr></table></figure>\n<h2 id=\"二、webstorm参数配置\"><a href=\"#二、webstorm参数配置\" class=\"headerlink\" title=\"二、webstorm参数配置\"></a>二、webstorm参数配置</h2><p>1）打开webstorm-&gt;settings -&gt; tools -&gt; file watchers</p>\n<p>2）参数配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Program：/usr/local/bin/sass</div><div class=\"line\">Arguments：--no-cache --update --style expanded --watch $FileName$:$FileParentDir$\\$FileNameWithoutExtension$.css</div><div class=\"line\">Working directory：$FileDir$</div><div class=\"line\">Output paths to refresh：$FileNameWithoutExtension$.css</div></pre></td></tr></table></figure>\n<p><img src=\"/img/webstorm-sass-config.png\" alt=\"webstorm参数配置\"></p>\n<h2 id=\"另外笔者推荐另一种方法：\"><a href=\"#另外笔者推荐另一种方法：\" class=\"headerlink\" title=\"另外笔者推荐另一种方法：\"></a>另外笔者推荐另一种方法：</h2><h3 id=\"使用compass\"><a href=\"#使用compass\" class=\"headerlink\" title=\"使用compass\"></a>使用compass</h3><p>1）安装：$ gem install compass</p>\n<p>2）编写config.rb文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">require &apos;compass/import-once/activate&apos;</div><div class=\"line\">\\# Require any additional compass plugins here.</div><div class=\"line\">\\# Set this to the root of your project when deployed:</div><div class=\"line\">http_path = &quot;/&quot;</div><div class=\"line\">css_dir = &quot;/pc/style/css&quot;</div><div class=\"line\">sass_dir = &quot;/pc/style/sass&quot;</div><div class=\"line\">images_dir = &quot;/pc/style/img&quot;</div><div class=\"line\">javascripts_dir = &quot;/pc/js&quot;</div><div class=\"line\">\\# You can select your preferred output style here (can be overridden via the command line):</div><div class=\"line\">\\# output_style = :expanded or :nested or :compact or :compressed</div><div class=\"line\">\\# To enable relative paths to assets via compass helper functions. Uncomment:</div><div class=\"line\">relative_assets = true</div><div class=\"line\">\\# To disable debugging comments that display the original location of your selectors. Uncomment:</div><div class=\"line\">\\# line_comments = false</div><div class=\"line\">preferred_syntax = :sass</div></pre></td></tr></table></figure>\n<p>3）在webstorm的Terminal中输入$ compass watch即可</p>\n","excerpt":"<p>本文主要介绍一下如何在webstorm上使用sass，实时自动编译sass文件。</p>\n<h2 id=\"一、安装\"><a href=\"#一、安装\" class=\"headerlink\" title=\"一、安装\"></a>一、安装</h2><h3 id=\"1、在翻-墙的情况下：\"><a href=\"#1、在翻-墙的情况下：\" class=\"headerlink\" title=\"1、在翻*墙的情况下：\"></a>1、在翻*墙的情况下：</h3><p>1）首先要为自己电脑安装ruby</p>\n<p>2）执行命令行：</p>\n<p>$ gem install sass</p>","more":"<h3 id=\"2、未翻-墙的情况下：\"><a href=\"#2、未翻-墙的情况下：\" class=\"headerlink\" title=\"2、未翻*墙的情况下：\"></a>2、未翻*墙的情况下：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ gem sources --remove https://rubygems.org/</div><div class=\"line\">$ gem sources -a https://ruby.taobao.org/</div><div class=\"line\">$ gem sources -l</div><div class=\"line\">*** CURRENT SOURCES ***</div><div class=\"line\">https://ruby.taobao.org</div><div class=\"line\">请确保只有ruby.taobao.org</div><div class=\"line\">$ gem install sass</div></pre></td></tr></table></figure>\n<h2 id=\"二、webstorm参数配置\"><a href=\"#二、webstorm参数配置\" class=\"headerlink\" title=\"二、webstorm参数配置\"></a>二、webstorm参数配置</h2><p>1）打开webstorm-&gt;settings -&gt; tools -&gt; file watchers</p>\n<p>2）参数配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">Program：/usr/local/bin/sass</div><div class=\"line\">Arguments：--no-cache --update --style expanded --watch $FileName$:$FileParentDir$\\$FileNameWithoutExtension$.css</div><div class=\"line\">Working directory：$FileDir$</div><div class=\"line\">Output paths to refresh：$FileNameWithoutExtension$.css</div></pre></td></tr></table></figure>\n<p><img src=\"/img/webstorm-sass-config.png\" alt=\"webstorm参数配置\"></p>\n<h2 id=\"另外笔者推荐另一种方法：\"><a href=\"#另外笔者推荐另一种方法：\" class=\"headerlink\" title=\"另外笔者推荐另一种方法：\"></a>另外笔者推荐另一种方法：</h2><h3 id=\"使用compass\"><a href=\"#使用compass\" class=\"headerlink\" title=\"使用compass\"></a>使用compass</h3><p>1）安装：$ gem install compass</p>\n<p>2）编写config.rb文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">require &apos;compass/import-once/activate&apos;</div><div class=\"line\">\\# Require any additional compass plugins here.</div><div class=\"line\">\\# Set this to the root of your project when deployed:</div><div class=\"line\">http_path = &quot;/&quot;</div><div class=\"line\">css_dir = &quot;/pc/style/css&quot;</div><div class=\"line\">sass_dir = &quot;/pc/style/sass&quot;</div><div class=\"line\">images_dir = &quot;/pc/style/img&quot;</div><div class=\"line\">javascripts_dir = &quot;/pc/js&quot;</div><div class=\"line\">\\# You can select your preferred output style here (can be overridden via the command line):</div><div class=\"line\">\\# output_style = :expanded or :nested or :compact or :compressed</div><div class=\"line\">\\# To enable relative paths to assets via compass helper functions. Uncomment:</div><div class=\"line\">relative_assets = true</div><div class=\"line\">\\# To disable debugging comments that display the original location of your selectors. Uncomment:</div><div class=\"line\">\\# line_comments = false</div><div class=\"line\">preferred_syntax = :sass</div></pre></td></tr></table></figure>\n<p>3）在webstorm的Terminal中输入$ compass watch即可</p>"},{"title":"配置自己的MAC","date":"2017-02-22T05:10:42.000Z","_content":"\n\n### 一、安装 brew 工具\n```\n$ curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1\n```\n\n### 二、安装 Solarized 配色工具\n\nSolarized是目前最完整的Terminal/Editor/IDE配色项目，要在 Mac OS X 终端里舒服的使用命令行（至少）需要给3个工具配色，terminal、vim 和 ls。这里不得不提和Terminal相同功能的工具iTerm2。\n\n\n#### 1、下载 Solarized：\n```\n$ git clone git://github.com/altercation/solarized.git\n```\n\n#### 2、配色方案 Solarized 导入\n    \nMac OS X 自带的 Terminal 和免费的 iTerm2 都是很好用的工具，iTerm2 可以切分成多窗口，更方便一些。\n\n如果你使用的是 Terminal，在solarized/osx-terminal.app-colors-solarized 下双击 Solarized Dark ansi.terminal 和 Solarized Light ansi.terminal 就会自动导入两种配色方案 Dark 和 Light 到 Terminal.app 里。\n\n如果你使用的是 iTerm2 的话，到 solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm 里。\n\n#### 3、vim的配色最好和终端一致\n```    \n$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n$ vi ~/.vimrc 添加以下代码\n\tsyntax on\n\tset background=dark\n\tcolorscheme solarized\n```\n    \n#### 4、ls\nMacOSX是基于FreeBSD的，所以一些工具ls，top等都是BSD那一套，ls不是GNU ls，所以即使 Terminal / iTerm2 配置了颜色，但是在Mac上敲入ls命令也不会显示高亮，可以通过安装coreutils来解决（brew install coreutils），不过如果对ls颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n```\n$ vi ~/.bash_profile\n\texport CLICOLOR=1\n```\n\n#### 5、ls高亮设置\n```   \n$ sudo brew install xz coreutils\n$ gdircolors --print-database > ~/.dir_colors\n$ vim ~/.bash_profile 添加以下代码\n\tif brew list | grep coreutils > /dev/null ; then\n\t\tPATH=\"$(brew --prefix coreutils)/libexec/gnubin:$PATH\"\n\t\talias ls='ls -F --show-control-chars --color=auto'\n\t\teval `gdircolors -b $HOME/.dir_colors`\n\tfi\n```\n\n#### 6、grep高亮设置\n```\n$ vim ~/.bash_profile 添加以下代码\n\talias grep='grep --color'\n\talias egrep='egrep --color'\n\talias fgrep='fgrep --color'\n```\n\n### 三、增强命令行工具\n添加ll、l、la指令\n\n```\n$ vim ~/.bash_profile 添加以下代码\n    alias ll='ls -alF'\n    alias la='ls -A'\n    alias l='ls -CF'\n```\n\n\n### 四、补充\n也可以玩一下 Terminal + Tmux、zsh + oh-my-zsh + powerline 一套。\nwindows下的 [babun](http://babun.github.io/) 也不错\n\n\n### 五、安装homebrew、solarized\n[homebrew & solarized](https://github.com/victorquan/Mac-Terminal-and-Vim-configuration)\n\n### 六、安装whistle代理工具\n[whistle github 源码](https://github.com/avwo/whistle) \n\n#### 1、安装node（npm）\n[详见快速安装node](http://victorquan.com/2017/02/21/%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85node%E7%AC%94%E8%AE%B0/)\n\n\n#### 2、安装whistle\n```\n$ sudo npm install -g whistle\n```\n\n\n#### 3、安装chrome的switch插件\n```\n$ wget https://github.com/victorquan/Mac-Terminal-and-Vim-configuration/blob/master/SwitchyOmega.crx\n```\n\n\n#### 4、SwitchOmega 配置参数\n```\n127.0.0.1:8899\n```\n\n\n#### 5、启动whistle\n```\n$ sudo whistle start\n```\n\n\n### 七、安装markdown转成ppt插件landslide\n[参考landslide](https://github.com/adamzap/landslide)\n\n如果你还未安装pip，见 [https://pip.pypa.io/en/latest/installing/](https://pip.pypa.io/en/latest/installing/)\n使用方法\n\n```\n$ landslide test.md -i -o > test.html\n```\n\n### 八、安装php composer\n#### 1、安装方法\n方法一，使用curl安装: \n\n```\n$ curl -sS https://getcomposer.org/installer | php\n```\n\n方法二，若没有安装curl，可以通过另外一种方式安装: \n\n```\n$ php -r \"readfile('https://getcomposer.org/installer');\" | php\n```\n\n方法三，手动下载:\n\n[Download Composer](https://getcomposer.org/composer.phar)\n    \n#### 2、将下载好的composer.phar移动到bin中成为全域指令\n```\n$ sudo mv composer.phar /usr/local/bin/composer\n```\n\n\n#### 3、修改权限\n```\n$ sudo chmod a+x composer\n```\n\n\n\n","source":"_posts/配置自己的MAC.md","raw":"---\ntitle: 配置自己的MAC\ndate: 2017-02-22 13:10:42\ntags: [Mac,代理,终端]\n---\n\n\n### 一、安装 brew 工具\n```\n$ curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1\n```\n\n### 二、安装 Solarized 配色工具\n\nSolarized是目前最完整的Terminal/Editor/IDE配色项目，要在 Mac OS X 终端里舒服的使用命令行（至少）需要给3个工具配色，terminal、vim 和 ls。这里不得不提和Terminal相同功能的工具iTerm2。\n\n\n#### 1、下载 Solarized：\n```\n$ git clone git://github.com/altercation/solarized.git\n```\n\n#### 2、配色方案 Solarized 导入\n    \nMac OS X 自带的 Terminal 和免费的 iTerm2 都是很好用的工具，iTerm2 可以切分成多窗口，更方便一些。\n\n如果你使用的是 Terminal，在solarized/osx-terminal.app-colors-solarized 下双击 Solarized Dark ansi.terminal 和 Solarized Light ansi.terminal 就会自动导入两种配色方案 Dark 和 Light 到 Terminal.app 里。\n\n如果你使用的是 iTerm2 的话，到 solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm 里。\n\n#### 3、vim的配色最好和终端一致\n```    \n$ cd solarized\n$ cd vim-colors-solarized/colors\n$ mkdir -p ~/.vim/colors\n$ cp solarized.vim ~/.vim/colors/\n$ vi ~/.vimrc 添加以下代码\n\tsyntax on\n\tset background=dark\n\tcolorscheme solarized\n```\n    \n#### 4、ls\nMacOSX是基于FreeBSD的，所以一些工具ls，top等都是BSD那一套，ls不是GNU ls，所以即使 Terminal / iTerm2 配置了颜色，但是在Mac上敲入ls命令也不会显示高亮，可以通过安装coreutils来解决（brew install coreutils），不过如果对ls颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：\n\n```\n$ vi ~/.bash_profile\n\texport CLICOLOR=1\n```\n\n#### 5、ls高亮设置\n```   \n$ sudo brew install xz coreutils\n$ gdircolors --print-database > ~/.dir_colors\n$ vim ~/.bash_profile 添加以下代码\n\tif brew list | grep coreutils > /dev/null ; then\n\t\tPATH=\"$(brew --prefix coreutils)/libexec/gnubin:$PATH\"\n\t\talias ls='ls -F --show-control-chars --color=auto'\n\t\teval `gdircolors -b $HOME/.dir_colors`\n\tfi\n```\n\n#### 6、grep高亮设置\n```\n$ vim ~/.bash_profile 添加以下代码\n\talias grep='grep --color'\n\talias egrep='egrep --color'\n\talias fgrep='fgrep --color'\n```\n\n### 三、增强命令行工具\n添加ll、l、la指令\n\n```\n$ vim ~/.bash_profile 添加以下代码\n    alias ll='ls -alF'\n    alias la='ls -A'\n    alias l='ls -CF'\n```\n\n\n### 四、补充\n也可以玩一下 Terminal + Tmux、zsh + oh-my-zsh + powerline 一套。\nwindows下的 [babun](http://babun.github.io/) 也不错\n\n\n### 五、安装homebrew、solarized\n[homebrew & solarized](https://github.com/victorquan/Mac-Terminal-and-Vim-configuration)\n\n### 六、安装whistle代理工具\n[whistle github 源码](https://github.com/avwo/whistle) \n\n#### 1、安装node（npm）\n[详见快速安装node](http://victorquan.com/2017/02/21/%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85node%E7%AC%94%E8%AE%B0/)\n\n\n#### 2、安装whistle\n```\n$ sudo npm install -g whistle\n```\n\n\n#### 3、安装chrome的switch插件\n```\n$ wget https://github.com/victorquan/Mac-Terminal-and-Vim-configuration/blob/master/SwitchyOmega.crx\n```\n\n\n#### 4、SwitchOmega 配置参数\n```\n127.0.0.1:8899\n```\n\n\n#### 5、启动whistle\n```\n$ sudo whistle start\n```\n\n\n### 七、安装markdown转成ppt插件landslide\n[参考landslide](https://github.com/adamzap/landslide)\n\n如果你还未安装pip，见 [https://pip.pypa.io/en/latest/installing/](https://pip.pypa.io/en/latest/installing/)\n使用方法\n\n```\n$ landslide test.md -i -o > test.html\n```\n\n### 八、安装php composer\n#### 1、安装方法\n方法一，使用curl安装: \n\n```\n$ curl -sS https://getcomposer.org/installer | php\n```\n\n方法二，若没有安装curl，可以通过另外一种方式安装: \n\n```\n$ php -r \"readfile('https://getcomposer.org/installer');\" | php\n```\n\n方法三，手动下载:\n\n[Download Composer](https://getcomposer.org/composer.phar)\n    \n#### 2、将下载好的composer.phar移动到bin中成为全域指令\n```\n$ sudo mv composer.phar /usr/local/bin/composer\n```\n\n\n#### 3、修改权限\n```\n$ sudo chmod a+x composer\n```\n\n\n\n","slug":"配置自己的MAC","published":1,"updated":"2017-02-23T05:37:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciziialt60008m9xs5o6fvag4","content":"<h3 id=\"一、安装-brew-工具\"><a href=\"#一、安装-brew-工具\" class=\"headerlink\" title=\"一、安装 brew 工具\"></a>一、安装 brew 工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</div></pre></td></tr></table></figure>\n<h3 id=\"二、安装-Solarized-配色工具\"><a href=\"#二、安装-Solarized-配色工具\" class=\"headerlink\" title=\"二、安装 Solarized 配色工具\"></a>二、安装 Solarized 配色工具</h3><p>Solarized是目前最完整的Terminal/Editor/IDE配色项目，要在 Mac OS X 终端里舒服的使用命令行（至少）需要给3个工具配色，terminal、vim 和 ls。这里不得不提和Terminal相同功能的工具iTerm2。</p>\n<h4 id=\"1、下载-Solarized：\"><a href=\"#1、下载-Solarized：\" class=\"headerlink\" title=\"1、下载 Solarized：\"></a>1、下载 Solarized：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://github.com/altercation/solarized.git</div></pre></td></tr></table></figure>\n<h4 id=\"2、配色方案-Solarized-导入\"><a href=\"#2、配色方案-Solarized-导入\" class=\"headerlink\" title=\"2、配色方案 Solarized 导入\"></a>2、配色方案 Solarized 导入</h4><p>Mac OS X 自带的 Terminal 和免费的 iTerm2 都是很好用的工具，iTerm2 可以切分成多窗口，更方便一些。</p>\n<p>如果你使用的是 Terminal，在solarized/osx-terminal.app-colors-solarized 下双击 Solarized Dark ansi.terminal 和 Solarized Light ansi.terminal 就会自动导入两种配色方案 Dark 和 Light 到 Terminal.app 里。</p>\n<p>如果你使用的是 iTerm2 的话，到 solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm 里。</p>\n<h4 id=\"3、vim的配色最好和终端一致\"><a href=\"#3、vim的配色最好和终端一致\" class=\"headerlink\" title=\"3、vim的配色最好和终端一致\"></a>3、vim的配色最好和终端一致</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd solarized</div><div class=\"line\">$ cd vim-colors-solarized/colors</div><div class=\"line\">$ mkdir -p ~/.vim/colors</div><div class=\"line\">$ cp solarized.vim ~/.vim/colors/</div><div class=\"line\">$ vi ~/.vimrc 添加以下代码</div><div class=\"line\">\tsyntax on</div><div class=\"line\">\tset background=dark</div><div class=\"line\">\tcolorscheme solarized</div></pre></td></tr></table></figure>\n<h4 id=\"4、ls\"><a href=\"#4、ls\" class=\"headerlink\" title=\"4、ls\"></a>4、ls</h4><p>MacOSX是基于FreeBSD的，所以一些工具ls，top等都是BSD那一套，ls不是GNU ls，所以即使 Terminal / iTerm2 配置了颜色，但是在Mac上敲入ls命令也不会显示高亮，可以通过安装coreutils来解决（brew install coreutils），不过如果对ls颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi ~/.bash_profile</div><div class=\"line\">\texport CLICOLOR=1</div></pre></td></tr></table></figure>\n<h4 id=\"5、ls高亮设置\"><a href=\"#5、ls高亮设置\" class=\"headerlink\" title=\"5、ls高亮设置\"></a>5、ls高亮设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo brew install xz coreutils</div><div class=\"line\">$ gdircolors --print-database &gt; ~/.dir_colors</div><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">\tif brew list | grep coreutils &gt; /dev/null ; then</div><div class=\"line\">\t\tPATH=&quot;$(brew --prefix coreutils)/libexec/gnubin:$PATH&quot;</div><div class=\"line\">\t\talias ls=&apos;ls -F --show-control-chars --color=auto&apos;</div><div class=\"line\">\t\teval `gdircolors -b $HOME/.dir_colors`</div><div class=\"line\">\tfi</div></pre></td></tr></table></figure>\n<h4 id=\"6、grep高亮设置\"><a href=\"#6、grep高亮设置\" class=\"headerlink\" title=\"6、grep高亮设置\"></a>6、grep高亮设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">\talias grep=&apos;grep --color&apos;</div><div class=\"line\">\talias egrep=&apos;egrep --color&apos;</div><div class=\"line\">\talias fgrep=&apos;fgrep --color&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"三、增强命令行工具\"><a href=\"#三、增强命令行工具\" class=\"headerlink\" title=\"三、增强命令行工具\"></a>三、增强命令行工具</h3><p>添加ll、l、la指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">    alias ll=&apos;ls -alF&apos;</div><div class=\"line\">    alias la=&apos;ls -A&apos;</div><div class=\"line\">    alias l=&apos;ls -CF&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"四、补充\"><a href=\"#四、补充\" class=\"headerlink\" title=\"四、补充\"></a>四、补充</h3><p>也可以玩一下 Terminal + Tmux、zsh + oh-my-zsh + powerline 一套。<br>windows下的 <a href=\"http://babun.github.io/\" target=\"_blank\" rel=\"external\">babun</a> 也不错</p>\n<h3 id=\"五、安装homebrew、solarized\"><a href=\"#五、安装homebrew、solarized\" class=\"headerlink\" title=\"五、安装homebrew、solarized\"></a>五、安装homebrew、solarized</h3><p><a href=\"https://github.com/victorquan/Mac-Terminal-and-Vim-configuration\" target=\"_blank\" rel=\"external\">homebrew &amp; solarized</a></p>\n<h3 id=\"六、安装whistle代理工具\"><a href=\"#六、安装whistle代理工具\" class=\"headerlink\" title=\"六、安装whistle代理工具\"></a>六、安装whistle代理工具</h3><p><a href=\"https://github.com/avwo/whistle\" target=\"_blank\" rel=\"external\">whistle github 源码</a> </p>\n<h4 id=\"1、安装node（npm）\"><a href=\"#1、安装node（npm）\" class=\"headerlink\" title=\"1、安装node（npm）\"></a>1、安装node（npm）</h4><p><a href=\"http://victorquan.com/2017/02/21/%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85node%E7%AC%94%E8%AE%B0/\" target=\"_blank\" rel=\"external\">详见快速安装node</a></p>\n<h4 id=\"2、安装whistle\"><a href=\"#2、安装whistle\" class=\"headerlink\" title=\"2、安装whistle\"></a>2、安装whistle</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm install -g whistle</div></pre></td></tr></table></figure>\n<h4 id=\"3、安装chrome的switch插件\"><a href=\"#3、安装chrome的switch插件\" class=\"headerlink\" title=\"3、安装chrome的switch插件\"></a>3、安装chrome的switch插件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget https://github.com/victorquan/Mac-Terminal-and-Vim-configuration/blob/master/SwitchyOmega.crx</div></pre></td></tr></table></figure>\n<h4 id=\"4、SwitchOmega-配置参数\"><a href=\"#4、SwitchOmega-配置参数\" class=\"headerlink\" title=\"4、SwitchOmega 配置参数\"></a>4、SwitchOmega 配置参数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">127.0.0.1:8899</div></pre></td></tr></table></figure>\n<h4 id=\"5、启动whistle\"><a href=\"#5、启动whistle\" class=\"headerlink\" title=\"5、启动whistle\"></a>5、启动whistle</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo whistle start</div></pre></td></tr></table></figure>\n<h3 id=\"七、安装markdown转成ppt插件landslide\"><a href=\"#七、安装markdown转成ppt插件landslide\" class=\"headerlink\" title=\"七、安装markdown转成ppt插件landslide\"></a>七、安装markdown转成ppt插件landslide</h3><p><a href=\"https://github.com/adamzap/landslide\" target=\"_blank\" rel=\"external\">参考landslide</a></p>\n<p>如果你还未安装pip，见 <a href=\"https://pip.pypa.io/en/latest/installing/\" target=\"_blank\" rel=\"external\">https://pip.pypa.io/en/latest/installing/</a><br>使用方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ landslide test.md -i -o &gt; test.html</div></pre></td></tr></table></figure>\n<h3 id=\"八、安装php-composer\"><a href=\"#八、安装php-composer\" class=\"headerlink\" title=\"八、安装php composer\"></a>八、安装php composer</h3><h4 id=\"1、安装方法\"><a href=\"#1、安装方法\" class=\"headerlink\" title=\"1、安装方法\"></a>1、安装方法</h4><p>方法一，使用curl安装: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -sS https://getcomposer.org/installer | php</div></pre></td></tr></table></figure>\n<p>方法二，若没有安装curl，可以通过另外一种方式安装: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ php -r &quot;readfile(&apos;https://getcomposer.org/installer&apos;);&quot; | php</div></pre></td></tr></table></figure>\n<p>方法三，手动下载:</p>\n<p><a href=\"https://getcomposer.org/composer.phar\" target=\"_blank\" rel=\"external\">Download Composer</a></p>\n<h4 id=\"2、将下载好的composer-phar移动到bin中成为全域指令\"><a href=\"#2、将下载好的composer-phar移动到bin中成为全域指令\" class=\"headerlink\" title=\"2、将下载好的composer.phar移动到bin中成为全域指令\"></a>2、将下载好的composer.phar移动到bin中成为全域指令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<h4 id=\"3、修改权限\"><a href=\"#3、修改权限\" class=\"headerlink\" title=\"3、修改权限\"></a>3、修改权限</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo chmod a+x composer</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"一、安装-brew-工具\"><a href=\"#一、安装-brew-工具\" class=\"headerlink\" title=\"一、安装 brew 工具\"></a>一、安装 brew 工具</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -LsSf http://github.com/mxcl/homebrew/tarball/master | sudo tar xvz -C/usr/local --strip 1</div></pre></td></tr></table></figure>\n<h3 id=\"二、安装-Solarized-配色工具\"><a href=\"#二、安装-Solarized-配色工具\" class=\"headerlink\" title=\"二、安装 Solarized 配色工具\"></a>二、安装 Solarized 配色工具</h3><p>Solarized是目前最完整的Terminal/Editor/IDE配色项目，要在 Mac OS X 终端里舒服的使用命令行（至少）需要给3个工具配色，terminal、vim 和 ls。这里不得不提和Terminal相同功能的工具iTerm2。</p>\n<h4 id=\"1、下载-Solarized：\"><a href=\"#1、下载-Solarized：\" class=\"headerlink\" title=\"1、下载 Solarized：\"></a>1、下载 Solarized：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git clone git://github.com/altercation/solarized.git</div></pre></td></tr></table></figure>\n<h4 id=\"2、配色方案-Solarized-导入\"><a href=\"#2、配色方案-Solarized-导入\" class=\"headerlink\" title=\"2、配色方案 Solarized 导入\"></a>2、配色方案 Solarized 导入</h4><p>Mac OS X 自带的 Terminal 和免费的 iTerm2 都是很好用的工具，iTerm2 可以切分成多窗口，更方便一些。</p>\n<p>如果你使用的是 Terminal，在solarized/osx-terminal.app-colors-solarized 下双击 Solarized Dark ansi.terminal 和 Solarized Light ansi.terminal 就会自动导入两种配色方案 Dark 和 Light 到 Terminal.app 里。</p>\n<p>如果你使用的是 iTerm2 的话，到 solarized/iterm2-colors-solarized 下双击 Solarized Dark.itermcolors 和 Solarized Light.itermcolors 两个文件就可以把配置文件导入到 iTerm 里。</p>\n<h4 id=\"3、vim的配色最好和终端一致\"><a href=\"#3、vim的配色最好和终端一致\" class=\"headerlink\" title=\"3、vim的配色最好和终端一致\"></a>3、vim的配色最好和终端一致</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cd solarized</div><div class=\"line\">$ cd vim-colors-solarized/colors</div><div class=\"line\">$ mkdir -p ~/.vim/colors</div><div class=\"line\">$ cp solarized.vim ~/.vim/colors/</div><div class=\"line\">$ vi ~/.vimrc 添加以下代码</div><div class=\"line\">\tsyntax on</div><div class=\"line\">\tset background=dark</div><div class=\"line\">\tcolorscheme solarized</div></pre></td></tr></table></figure>\n<h4 id=\"4、ls\"><a href=\"#4、ls\" class=\"headerlink\" title=\"4、ls\"></a>4、ls</h4><p>MacOSX是基于FreeBSD的，所以一些工具ls，top等都是BSD那一套，ls不是GNU ls，所以即使 Terminal / iTerm2 配置了颜色，但是在Mac上敲入ls命令也不会显示高亮，可以通过安装coreutils来解决（brew install coreutils），不过如果对ls颜色不挑剔的话有个简单办法就是在 .bash_profile 里输出 CLICOLOR=1：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vi ~/.bash_profile</div><div class=\"line\">\texport CLICOLOR=1</div></pre></td></tr></table></figure>\n<h4 id=\"5、ls高亮设置\"><a href=\"#5、ls高亮设置\" class=\"headerlink\" title=\"5、ls高亮设置\"></a>5、ls高亮设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo brew install xz coreutils</div><div class=\"line\">$ gdircolors --print-database &gt; ~/.dir_colors</div><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">\tif brew list | grep coreutils &gt; /dev/null ; then</div><div class=\"line\">\t\tPATH=&quot;$(brew --prefix coreutils)/libexec/gnubin:$PATH&quot;</div><div class=\"line\">\t\talias ls=&apos;ls -F --show-control-chars --color=auto&apos;</div><div class=\"line\">\t\teval `gdircolors -b $HOME/.dir_colors`</div><div class=\"line\">\tfi</div></pre></td></tr></table></figure>\n<h4 id=\"6、grep高亮设置\"><a href=\"#6、grep高亮设置\" class=\"headerlink\" title=\"6、grep高亮设置\"></a>6、grep高亮设置</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">\talias grep=&apos;grep --color&apos;</div><div class=\"line\">\talias egrep=&apos;egrep --color&apos;</div><div class=\"line\">\talias fgrep=&apos;fgrep --color&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"三、增强命令行工具\"><a href=\"#三、增强命令行工具\" class=\"headerlink\" title=\"三、增强命令行工具\"></a>三、增强命令行工具</h3><p>添加ll、l、la指令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ vim ~/.bash_profile 添加以下代码</div><div class=\"line\">    alias ll=&apos;ls -alF&apos;</div><div class=\"line\">    alias la=&apos;ls -A&apos;</div><div class=\"line\">    alias l=&apos;ls -CF&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"四、补充\"><a href=\"#四、补充\" class=\"headerlink\" title=\"四、补充\"></a>四、补充</h3><p>也可以玩一下 Terminal + Tmux、zsh + oh-my-zsh + powerline 一套。<br>windows下的 <a href=\"http://babun.github.io/\">babun</a> 也不错</p>\n<h3 id=\"五、安装homebrew、solarized\"><a href=\"#五、安装homebrew、solarized\" class=\"headerlink\" title=\"五、安装homebrew、solarized\"></a>五、安装homebrew、solarized</h3><p><a href=\"https://github.com/victorquan/Mac-Terminal-and-Vim-configuration\">homebrew &amp; solarized</a></p>\n<h3 id=\"六、安装whistle代理工具\"><a href=\"#六、安装whistle代理工具\" class=\"headerlink\" title=\"六、安装whistle代理工具\"></a>六、安装whistle代理工具</h3><p><a href=\"https://github.com/avwo/whistle\">whistle github 源码</a> </p>\n<h4 id=\"1、安装node（npm）\"><a href=\"#1、安装node（npm）\" class=\"headerlink\" title=\"1、安装node（npm）\"></a>1、安装node（npm）</h4><p><a href=\"http://victorquan.com/2017/02/21/%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85node%E7%AC%94%E8%AE%B0/\">详见快速安装node</a></p>\n<h4 id=\"2、安装whistle\"><a href=\"#2、安装whistle\" class=\"headerlink\" title=\"2、安装whistle\"></a>2、安装whistle</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo npm install -g whistle</div></pre></td></tr></table></figure>\n<h4 id=\"3、安装chrome的switch插件\"><a href=\"#3、安装chrome的switch插件\" class=\"headerlink\" title=\"3、安装chrome的switch插件\"></a>3、安装chrome的switch插件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ wget https://github.com/victorquan/Mac-Terminal-and-Vim-configuration/blob/master/SwitchyOmega.crx</div></pre></td></tr></table></figure>\n<h4 id=\"4、SwitchOmega-配置参数\"><a href=\"#4、SwitchOmega-配置参数\" class=\"headerlink\" title=\"4、SwitchOmega 配置参数\"></a>4、SwitchOmega 配置参数</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">127.0.0.1:8899</div></pre></td></tr></table></figure>\n<h4 id=\"5、启动whistle\"><a href=\"#5、启动whistle\" class=\"headerlink\" title=\"5、启动whistle\"></a>5、启动whistle</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo whistle start</div></pre></td></tr></table></figure>\n<h3 id=\"七、安装markdown转成ppt插件landslide\"><a href=\"#七、安装markdown转成ppt插件landslide\" class=\"headerlink\" title=\"七、安装markdown转成ppt插件landslide\"></a>七、安装markdown转成ppt插件landslide</h3><p><a href=\"https://github.com/adamzap/landslide\">参考landslide</a></p>\n<p>如果你还未安装pip，见 <a href=\"https://pip.pypa.io/en/latest/installing/\">https://pip.pypa.io/en/latest/installing/</a><br>使用方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ landslide test.md -i -o &gt; test.html</div></pre></td></tr></table></figure>\n<h3 id=\"八、安装php-composer\"><a href=\"#八、安装php-composer\" class=\"headerlink\" title=\"八、安装php composer\"></a>八、安装php composer</h3><h4 id=\"1、安装方法\"><a href=\"#1、安装方法\" class=\"headerlink\" title=\"1、安装方法\"></a>1、安装方法</h4><p>方法一，使用curl安装: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ curl -sS https://getcomposer.org/installer | php</div></pre></td></tr></table></figure>\n<p>方法二，若没有安装curl，可以通过另外一种方式安装: </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ php -r &quot;readfile(&apos;https://getcomposer.org/installer&apos;);&quot; | php</div></pre></td></tr></table></figure>\n<p>方法三，手动下载:</p>\n<p><a href=\"https://getcomposer.org/composer.phar\">Download Composer</a></p>\n<h4 id=\"2、将下载好的composer-phar移动到bin中成为全域指令\"><a href=\"#2、将下载好的composer-phar移动到bin中成为全域指令\" class=\"headerlink\" title=\"2、将下载好的composer.phar移动到bin中成为全域指令\"></a>2、将下载好的composer.phar移动到bin中成为全域指令</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo mv composer.phar /usr/local/bin/composer</div></pre></td></tr></table></figure>\n<h4 id=\"3、修改权限\"><a href=\"#3、修改权限\" class=\"headerlink\" title=\"3、修改权限\"></a>3、修改权限</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo chmod a+x composer</div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ciziialsk0000m9xs6zis6rfr","tag_id":"ciziialsv0004m9xshpt0pnyi","_id":"ciziialt8000bm9xs5bu42ccs"},{"post_id":"ciziialsk0000m9xs6zis6rfr","tag_id":"ciziialt60009m9xsk3jwvhtl","_id":"ciziialt8000cm9xsxmlmjsgs"},{"post_id":"ciziialsr0002m9xs70cloqda","tag_id":"ciziialt8000am9xshcgc1qgd","_id":"ciziialt9000fm9xsm27bxp55"},{"post_id":"ciziialsr0002m9xs70cloqda","tag_id":"ciziialt8000dm9xsx473hwlr","_id":"ciziialt9000gm9xsb9vrpulk"},{"post_id":"ciziialt00005m9xs7k45qhv0","tag_id":"ciziialt9000em9xskrc8a4ml","_id":"ciziialt9000jm9xs7vztihtm"},{"post_id":"ciziialt00005m9xs7k45qhv0","tag_id":"ciziialt9000hm9xsd4kz0ofb","_id":"ciziialta000km9xsqeoxi7yd"},{"post_id":"ciziialt20007m9xs9l125ejw","tag_id":"ciziialt9000im9xszilkqssm","_id":"ciziialtb000nm9xs19hv761i"},{"post_id":"ciziialt20007m9xs9l125ejw","tag_id":"ciziialta000lm9xsnxhz64hq","_id":"ciziialtb000om9xsz85j9s2p"},{"post_id":"ciziialt60008m9xs5o6fvag4","tag_id":"ciziialta000mm9xsl6euhkfl","_id":"ciziialtc000rm9xsu0s370rf"},{"post_id":"ciziialt60008m9xs5o6fvag4","tag_id":"ciziialtb000pm9xs76tv8lum","_id":"ciziialtc000sm9xscx70af8p"},{"post_id":"ciziialt60008m9xs5o6fvag4","tag_id":"ciziialtb000qm9xslh1j3ja8","_id":"ciziialtc000tm9xsi04wujxh"}],"Tag":[{"name":"crontab","_id":"ciziialsv0004m9xshpt0pnyi"},{"name":"Linux","_id":"ciziialt60009m9xsk3jwvhtl"},{"name":"node","_id":"ciziialt8000am9xshcgc1qgd"},{"name":"nvm","_id":"ciziialt8000dm9xsx473hwlr"},{"name":"git","_id":"ciziialt9000em9xskrc8a4ml"},{"name":"版本控制","_id":"ciziialt9000hm9xsd4kz0ofb"},{"name":"sass","_id":"ciziialt9000im9xszilkqssm"},{"name":"前端","_id":"ciziialta000lm9xsnxhz64hq"},{"name":"Mac","_id":"ciziialta000mm9xsl6euhkfl"},{"name":"代理","_id":"ciziialtb000pm9xs76tv8lum"},{"name":"终端","_id":"ciziialtb000qm9xslh1j3ja8"}]}}